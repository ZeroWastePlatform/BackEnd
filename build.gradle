buildscript {
	ext {
		querydslVersion = "5.0.0"
	}
}

plugins {
	id 'java'
	id 'org.springframework.boot' version '2.7.6'
	id 'io.spring.dependency-management' version '1.0.15.RELEASE'
}

group = 'com.greenUs'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '11'

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

bootJar {
	archiveBaseName = "greenus"
	archiveFileName = "greenus.jar"
	archiveVersion = "0.0.1"
}


dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springdoc:springdoc-openapi-ui:1.6.14'
	compileOnly 'org.projectlombok:lombok'
	annotationProcessor 'org.projectlombok:lombok'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	implementation 'com.h2database:h2:1.4.200'
	implementation 'com.amazonaws:aws-java-sdk-s3:1.12.281'
	implementation 'com.googlecode.json-simple:json-simple:1.1.1'

	// thumbnail
	implementation 'com.github.downgoon:marvin:1.5.5'
	implementation 'com.github.downgoon:MarvinPlugins:1.5.5'
	implementation 'org.springframework:spring-test'

	// jpa + mysql
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'mysql:mysql-connector-java'

	// redis
	implementation 'org.springframework.boot:spring-boot-starter-data-redis'

	// configuration
	annotationProcessor "org.springframework.boot:spring-boot-configuration-processor"

	// jwt
	implementation 'io.jsonwebtoken:jjwt-api:0.11.5'
	runtimeOnly 'io.jsonwebtoken:jjwt-impl:0.11.5'
	runtimeOnly 'io.jsonwebtoken:jjwt-jackson:0.11.5'

    // querydsl
    implementation "com.querydsl:querydsl-jpa:${querydslVersion}"
	implementation "com.querydsl:querydsl-apt:${querydslVersion}"
	annotationProcessor "com.querydsl:querydsl-apt:${querydslVersion}:jpa"
	annotationProcessor 'jakarta.persistence:jakarta.persistence-api'
	annotationProcessor 'jakarta.annotation:jakarta.annotation-api'
}

def querydslDir = 'build/generated/querydsl'

sourceSets {
	main.java.srcDir querydslDir
}

compileJava {
	options.compilerArgs << '-Aquerydsl.generatedAnnotationClass=javax.annotation.Generated'
}

tasks.withType(JavaCompile) {
	options.generatedSourceOutputDirectory = file(querydslDir)
}

tasks.named('test') {
	useJUnitPlatform()
}

clean {
	delete file(querydslDir)
}